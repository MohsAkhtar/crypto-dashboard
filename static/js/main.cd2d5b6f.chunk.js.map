{"version":3,"sources":["App/AppLayout.js","Shared/Styles.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","App/AppProvider.js","App/AppBar.js","Settings/Welcome.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Shared/Content.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotlight.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/HighChartsTheme.js","Dashboard/HighChartsConfig.js","Dashboard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","lightBlueBackground","concat","backgroundColor2","subtleBoxShadow","greenBoxShadow","Tile","Tile_templateObject","SelectableTile","_templateObject2","DeletableTile","_templateObject3","DisabledTile","_templateObject4","CoinHeaderGridStyled","CoinHeaderGrid_templateObject","CoinSymbol","CoinHeaderGrid_templateObject2","DeleteIcon","CoinHeaderGrid_templateObject3","CoinHeaderGrid","_ref","name","symbol","topSection","react_default","a","createElement","cryptocompare","require","AppContext","React","createContext","MAX_FAVOURITES","TIME_UNITS","AppProvider","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addCoin","key","favourites","toConsumableArray","state","length","push","setState","removeCoin","_","pull","isInFavourites","includes","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","asyncToGenerator","regenerator_default","mark","_callee","prices","wrap","_context","prev","next","firstVisit","abrupt","sent","stop","_callee2","results","historical","_context2","currentFavourite","data","map","ticker","index","moment","subtract","defineProperty","timeInterval","valueOf","USD","promises","units","priceHistorical","toDate","Promise","all","_callee3","returnData","i","priceData","_context3","priceFull","t0","console","warn","_callee4","coinList","_context4","Data","confirmFavourites","page","localStorage","setItem","JSON","stringify","setCurrentFavourite","coinSymbol","objectSpread","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","log","savedSettings","inherits","createClass","cryptoDashboardData","Provider","children","Component","Logo","AppBar_templateObject","Bar","AppBar_templateObject2","ControlButtonElem","AppBar_templateObject3","active","css","AppBar_templateObject4","hidden","_templateObject5","ControlButton","Consumer","_ref2","lower","onClick","charAt","toUpperCase","substr","AppBar","Welcome","ConfirmButtonStyled","ConfirmButton_templateObject","CenterDiv","ConfirmButton_templateObject2","ConfirmButton","Page","CoinImage","img","CoinImage_templateObject","spotlight","CoinImage_templateObject2","Shared_CoinImage","coin","alt","src","ImageUrl","CoinTile","coinKey","TileClass","clickCoinHandler","CoinName","Symbol","CoinGridStyled","CoinGrid_templateObject","getCoinsToDisplay","keys","slice","getLowerSectionCoins","CoinGrid","SearchGrid","Search_templateObject","SearchInput","input","Search_templateObject2","handleFilter","debounce","inputValue","coinSymbols","coinNames","sym","allStringToSearch","fuzzyResults","fuzzy","filter","result","string","pickBy","symbolKey","coinName","Search","onKeyUp","e","target","filterCoins","Settings","Welcome_Welcome","Content","JustifyRight","PriceTile_templateObject","JustifyLeft","PriceTile_templateObject2","TickerPrice","PriceTile_templateObject3","ChangePct","PriceTile_templateObject4","red","PriceTile_templateObject5","numberFormat","number","ChangePercent","CHANGEPCT24HOUR","PriceTileStyled","_templateObject6","compact","_templateObject7","_templateObject8","PriceTile","PRICE","PriceTileCompact","_ref3","Dashboard_PriceTile","_ref4","price","_ref5","PriceGrid","PriceGrid_templateObject","Dashboard_PriceGrid","SpotLightName","h2","CoinSpotlight_templateObject","CoinSpotlight","select","ChartSelect_templateObject","ReactHighCharts","Highcharts","setOptions","colors","chart","backgroundColor","borderColor","borderWidth","className","plotBackgroundColor","plotBorderWidth","title","style","color","font","subtitle","xAxis","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","yAxis","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","plotOptions","line","dataLabels","marker","spline","scatter","candlestick","legend","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","series","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","maskColor","PriceChart","ChartSelect","defaultValue","onChange","ReactHighcharts_default","config","text","type","layout","align","verticalAlign","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","highchartsConfig","ChartGrid","Dashboard_templateObject","Dashboard","App","AppLayout","AppProvider_AppProvider","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd2d5b6f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n  padding: 40px;\r\n`;\r\n","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#061a44';\r\nexport const color2 = lightTheme ? 'white' : '#010e2c';\r\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\r\n\r\nif (lightTheme) {\r\n  document.body.style.background = '#e1eaee';\r\n  document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${\r\n  lightTheme ? '#a9b6ff' : '#121d5b'\r\n}`;\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;';\r\n","import styled from 'styled-components';\r\nimport {\r\n  subtleBoxShadow,\r\n  greenBoxShadow,\r\n  redBoxShadow,\r\n  lightBlueBackground\r\n} from './Styles';\r\n\r\nexport const Tile = styled.div`\r\n  ${subtleBoxShadow}\r\n  ${lightBlueBackground}\r\n    padding: 10px;\r\n`;\r\n\r\nexport const SelectableTile = styled(Tile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${greenBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const DeletableTile = styled(SelectableTile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${redBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const DisabledTile = styled(Tile)`\r\n  pointer-events: none;\r\n  opacity: 0.4;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DeletableTile } from '../Shared/Tile';\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nexport const CoinSymbol = styled.div`\r\n  justify-self: right;\r\n`;\r\n\r\n// adding new properties using styled-components when hovering on deletable tiles\r\nconst DeleteIcon = styled.div`\r\n  justify-self: right;\r\n  display: none;\r\n  ${DeletableTile}:hover & {\r\n    display: block;\r\n    color: red;\r\n  }\r\n`;\r\n\r\nexport default function({ name, symbol, topSection }) {\r\n  return (\r\n    <CoinHeaderGridStyled>\r\n      <div> {name} </div>\r\n      {topSection ? (\r\n        <DeleteIcon> X </DeleteIcon>\r\n      ) : (\r\n        <CoinSymbol> {symbol} </CoinSymbol>\r\n      )}\r\n    </CoinHeaderGridStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { CoinSymbol } from '../Settings/CoinHeaderGrid';\r\nimport moment from 'moment';\r\n\r\nconst cryptocompare = require('cryptocompare');\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst MAX_FAVOURITES = 10;\r\nconst TIME_UNITS = 10;\r\n\r\nexport class AppProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 'dashboard',\r\n      favourites: ['BTC', 'ETH', 'XMR', 'DOGE'],\r\n      timeInterval: 'months',\r\n      ...this.savedSettings(),\r\n      setPage: this.setPage,\r\n      addCoin: this.addCoin,\r\n      removeCoin: this.removeCoin,\r\n      isInFavourites: this.isInFavourites,\r\n      setFilteredCoins: this.setFilteredCoins,\r\n      setCurrentFavourite: this.setCurrentFavourite,\r\n      confirmFavourites: this.confirmFavourites,\r\n      changeChartSelect: this.changeChartSelect\r\n    };\r\n  }\r\n\r\n  // adds coin to favourites\r\n  addCoin = key => {\r\n    let favourites = [...this.state.favourites];\r\n    if (favourites.length < MAX_FAVOURITES) {\r\n      favourites.push(key);\r\n      this.setState({ favourites });\r\n    }\r\n  };\r\n\r\n  // remove coin from favourites\r\n  removeCoin = key => {\r\n    let favourites = [...this.state.favourites];\r\n    // _.pull is lodash command to pull a value out of the array and then return new array with value removed\r\n    this.setState({ favourites: _.pull(favourites, key) });\r\n  };\r\n\r\n  // check if value is already in favourites\r\n  isInFavourites = key => _.includes(this.state.favourites, key);\r\n\r\n  // want coin api to load on mount\r\n  componentDidMount = () => {\r\n    this.fetchCoins();\r\n    this.fetchPrices();\r\n    this.fetchHistorical();\r\n  };\r\n\r\n  // fetch prices for dashboard\r\n  fetchPrices = async () => {\r\n    // if user is visiting first time we don't have coin prices to fetch yet\r\n    if (this.state.firstVisit) {\r\n      return;\r\n    }\r\n    let prices = await this.prices();\r\n    this.setState({ prices });\r\n  };\r\n\r\n  // fetch data for high chart\r\n  fetchHistorical = async () => {\r\n    if (this.state.firstVisit) {\r\n      return;\r\n    }\r\n    let results = await this.historical();\r\n    let historical = [\r\n      {\r\n        name: this.state.currentFavourite,\r\n        data: results.map((ticker, index) => [\r\n          moment()\r\n            .subtract({ [this.state.timeInterval]: TIME_UNITS - index })\r\n            .valueOf(),\r\n          ticker.USD\r\n        ])\r\n      }\r\n    ];\r\n    this.setState({ historical });\r\n  };\r\n\r\n  historical = () => {\r\n    let promises = [];\r\n    for (let units = TIME_UNITS; units > 0; units--) {\r\n      promises.push(\r\n        cryptocompare.priceHistorical(\r\n          this.state.currentFavourite,\r\n          ['USD'],\r\n          moment()\r\n            .subtract({ [this.state.timeInterval]: units })\r\n            .toDate()\r\n        )\r\n      );\r\n    }\r\n    return Promise.all(promises);\r\n  };\r\n\r\n  // prices function for fetchPrices function\r\n  prices = async () => {\r\n    let returnData = [];\r\n    for (let i = 0; i < this.state.favourites.length; i++) {\r\n      try {\r\n        let priceData = await cryptocompare.priceFull(\r\n          this.state.favourites[i],\r\n          'USD'\r\n        );\r\n        returnData.push(priceData);\r\n      } catch (e) {\r\n        console.warn('Fetch Price error: ', e);\r\n      }\r\n    }\r\n    return returnData;\r\n  };\r\n\r\n  // fetches coin data from crypto compare api\r\n  fetchCoins = async () => {\r\n    let coinList = (await cryptocompare.coinList()).Data;\r\n    this.setState({ coinList });\r\n  };\r\n\r\n  // confirming favourites redirects to dashboard\r\n  confirmFavourites = () => {\r\n    let currentFavourite = this.state.favourites[0];\r\n    this.setState(\r\n      {\r\n        firstVisit: false,\r\n        page: 'dashboard',\r\n        currentFavourite,\r\n        prices: null,\r\n        historical: null\r\n      },\r\n      () => {\r\n        this.fetchPrices();\r\n        this.fetchHistorical();\r\n      }\r\n    );\r\n    localStorage.setItem(\r\n      'cryptoDashboard',\r\n      JSON.stringify({\r\n        favourites: this.state.favourites,\r\n        currentFavourite\r\n      })\r\n    );\r\n  };\r\n\r\n  // sets favourite coin on dashboard\r\n  setCurrentFavourite = coinSymbol => {\r\n    this.setState(\r\n      {\r\n        currentFavourite: coinSymbol,\r\n        historical: null\r\n      },\r\n      this.fetchHistorical\r\n    );\r\n    localStorage.setItem(\r\n      'cryptoDashboard',\r\n      JSON.stringify({\r\n        ...JSON.parse(localStorage.getItem('cryptoDashboard')),\r\n        currentFavourite: coinSymbol\r\n      })\r\n    );\r\n  };\r\n\r\n  // Check if user has used site before by looking at ls\r\n  savedSettings() {\r\n    let cryptoDashboardData = JSON.parse(\r\n      localStorage.getItem('cryptoDashboard')\r\n    );\r\n    // if we have not visited site before\r\n    if (!cryptoDashboardData) {\r\n      return { page: 'settings', firstVisit: true };\r\n    }\r\n\r\n    let { favourites, currentFavourite } = cryptoDashboardData;\r\n    return { favourites, currentFavourite };\r\n  }\r\n\r\n  setPage = page => this.setState({ page });\r\n\r\n  // filter coins with search bar\r\n  setFilteredCoins = filteredCoins => this.setState({ filteredCoins });\r\n\r\n  // changes whether to display days/weeks/months on chart of dashboard\r\n  changeChartSelect = value => {\r\n    console.log(value);\r\n    this.setState(\r\n      { timeInterval: value, historical: null },\r\n      this.fetchHistorical\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { AppContext } from './AppProvider';\r\n\r\nconst Logo = styled.div`\r\n  font-size: 1.5em;\r\n`;\r\n\r\n// auto will replace remaining content with space\r\nconst Bar = styled.div`\r\n  display: grid;\r\n  margin-bottom: 40px;\r\n  grid-template-columns: 180px auto 100px 100px;\r\n`;\r\n\r\nconst ControlButtonElem = styled.div`\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.active &&\r\n    css`\r\n      text-shadow: 0px 0px 60px #03ff03;\r\n    `}\r\n  ${props =>\r\n    props.hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\n// Capitalises first letter of word\r\nfunction toProperCase(lower) {\r\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\r\n}\r\n\r\nfunction ControlButton({ name, active }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ firstVisit, page, setPage }) => (\r\n        <ControlButtonElem\r\n          active={page === name}\r\n          onClick={() => setPage(name)}\r\n          hidden={firstVisit && name === 'dashboard'}\r\n        >\r\n          {toProperCase(name)}\r\n        </ControlButtonElem>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Bar>\r\n      <Logo> CryptoDashboard </Logo>\r\n      <div />\r\n      <ControlButton active name=\"dashboard\" />\r\n      <ControlButton name=\"settings\" />\r\n    </Bar>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\nexport default class Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ firstVisit }) =>\r\n          firstVisit ? (\r\n            <div>\r\n              <h1>Welcome, Please Select Your Favourite Coins to Begin. </h1>\r\n            </div>\r\n          ) : null\r\n        }\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport { fontSize1, greenBoxShadow, color3 } from '../Shared/Styles';\r\n\r\nconst ConfirmButtonStyled = styled.div`\r\n  margin: 20px;\r\n  color: ${color3}\r\n  ${fontSize1}\r\n  padding: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n      ${greenBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const CenterDiv = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ confirmFavourites }) => (\r\n        <CenterDiv>\r\n          <ConfirmButtonStyled onClick={confirmFavourites}>\r\n            Confirm Favourites\r\n          </ConfirmButtonStyled>\r\n        </CenterDiv>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\n// extract page from props, check if page is name passed in at component level. children props are nested components\r\nexport default function({ name, children }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ page }) => {\r\n        if (page !== name) {\r\n          return null;\r\n        }\r\n        return <div> {children}</div>;\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst CoinImage = styled.img`\r\n  height: 50px;\r\n\r\n  ${props =>\r\n    props.spotlight &&\r\n    css`\r\n      height: 200px;\r\n      margin: auto;\r\n      display: block;\r\n    `}\r\n`;\r\n\r\n// if no style passed in it defaults to height: '50px';\r\nexport default function({ coin, spotlight }) {\r\n  return (\r\n    <CoinImage\r\n      spotlight={spotlight}\r\n      alt={coin.CoinSymbol}\r\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport { SelectableTile, DeletableTile, DisabledTile } from '../Shared/Tile';\r\nimport CoinHeaderGrid from './CoinHeaderGrid';\r\nimport CoinImage from '../Shared/CoinImage';\r\n\r\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\r\n  return topSection\r\n    ? () => {\r\n        removeCoin(coinKey);\r\n      }\r\n    : () => {\r\n        addCoin(coinKey);\r\n      };\r\n}\r\n\r\nexport default function({ coinKey, topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, addCoin, removeCoin, isInFavourites }) => {\r\n        // returning coin object of coins\r\n        let coin = coinList[coinKey];\r\n\r\n        let TileClass = SelectableTile;\r\n        if (topSection) {\r\n          TileClass = DeletableTile;\r\n        } else if (isInFavourites(coinKey)) {\r\n          TileClass = DisabledTile;\r\n        }\r\n\r\n        return (\r\n          <TileClass\r\n            onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\r\n          >\r\n            <CoinHeaderGrid\r\n              topSection={topSection}\r\n              name={coin.CoinName}\r\n              symbol={coin.Symbol}\r\n            />\r\n            <CoinImage coin={coin} />\r\n          </TileClass>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport CoinTile from './CoinTile';\r\n\r\nexport const CoinGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nfunction getLowerSectionCoins(coinList, filteredCoins) {\r\n  return (\r\n    (filteredCoins && Object.keys(filteredCoins)) ||\r\n    Object.keys(coinList).slice(0, 100)\r\n  );\r\n}\r\n\r\nfunction getCoinsToDisplay(coinList, topSection, favourites, filteredCoins) {\r\n  // don't want to display all 1000 images\r\n  return topSection\r\n    ? favourites\r\n    : getLowerSectionCoins(coinList, filteredCoins);\r\n}\r\n\r\nexport default function({ topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, favourites, filteredCoins }) => (\r\n        <CoinGridStyled>\r\n          {getCoinsToDisplay(\r\n            coinList,\r\n            topSection,\r\n            favourites,\r\n            filteredCoins\r\n          ).map(coinKey => (\r\n            <CoinTile topSection={topSection} coinKey={coinKey} key={coinKey} />\r\n          ))}\r\n        </CoinGridStyled>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { backgroundColor2, fontSize2 } from '../Shared/Styles';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport _ from 'lodash';\r\nimport fuzzy from 'fuzzy';\r\n\r\nconst SearchGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  ${backgroundColor2}\r\n  ${fontSize2}\r\n  color: #1163c9;\r\n  border: 1px solid;\r\n  height: 25px;\r\n  place-self: center left;\r\n`;\r\n\r\n// debounce is a lodash function that stops too many events firing off at once, telling it to wait 500ms before applying filter\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\r\n  // Get all coin symbols\r\n  let coinSymbols = Object.keys(coinList);\r\n  // Get all the coin names, map symbol to name\r\n  let coinNames = coinSymbols.map(sym => coinList[sym].CoinName);\r\n  // Get all the coins and concat the name\r\n  let allStringToSearch = coinSymbols.concat(coinNames);\r\n  // fuzzy is used to do fuzzy search. It returns an object so needs to be converted to string\r\n  let fuzzyResults = fuzzy\r\n    .filter(inputValue, allStringToSearch, {})\r\n    .map(result => result.string);\r\n  // _.pickBy picks from the object a list of keys based on a callback function\r\n  let filteredCoins = _.pickBy(coinList, (result, symbolKey) => {\r\n    let coinName = result.CoinName;\r\n    return (\r\n      _.includes(fuzzyResults, symbolKey) || _.includes(fuzzyResults, coinName)\r\n    );\r\n  });\r\n  // set filtered coins to what we have filtered from above\r\n  setFilteredCoins(filteredCoins);\r\n}, 500);\r\n\r\nfunction filterCoins(e, setFilteredCoins, coinList) {\r\n  let inputValue = e.target.value;\r\n  // to reset list back to null if the search is emptied\r\n  if (!inputValue) {\r\n    setFilteredCoins(null);\r\n    return;\r\n  }\r\n  handleFilter(inputValue, coinList, setFilteredCoins);\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setFilteredCoins, coinList }) => (\r\n        <SearchGrid>\r\n          <h2>Search All Coins</h2>\r\n          <SearchInput\r\n            onKeyUp={e => filterCoins(e, setFilteredCoins, coinList)}\r\n          />\r\n        </SearchGrid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Welcome from './Welcome';\r\nimport ConfirmButton from './ConfirmButton';\r\nimport Page from '../Shared/Page';\r\nimport CoinGrid from './CoinGrid';\r\nimport Search from './Search';\r\n\r\nexport default function() {\r\n  return (\r\n    <Page name=\"settings\">\r\n      <Welcome />\r\n      <CoinGrid topSection />\r\n      <ConfirmButton />\r\n      <Search />\r\n      <CoinGrid />\r\n    </Page>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\n// Making sure page isn't loaded before api promise has resolved\r\nexport default function(props) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, prices, firstVisit }) => {\r\n        if (!coinList) {\r\n          return <div> Loading Coins </div>;\r\n        }\r\n        if (!firstVisit && !prices) {\r\n          return <div> Loading Prices </div>;\r\n        }\r\n        return <div> {props.children} </div>;\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { SelectableTile } from '../Shared/Tile';\r\nimport { fontSize3, fontSizeBig, greenBoxShadow } from '../Shared/Styles';\r\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\n// justify content to right\r\nconst JustifyRight = styled.div`\r\n  justify-self: right;\r\n`;\r\n\r\n// justify content to left\r\nconst JustifyLeft = styled.div`\r\n  justify-self: left;\r\n`;\r\n\r\n// displays the price of the coin\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig};\r\n`;\r\n\r\n// percent is displayed red if price change is negative, green otherwise\r\nconst ChangePct = styled.div`\r\n  color: green;\r\n  ${props =>\r\n    props.red &&\r\n    css`\r\n      color: red;\r\n    `}\r\n`;\r\n\r\n// returns number with 7 significant figs.\r\nconst numberFormat = number => {\r\n  return +(number + '').slice(0, 7);\r\n};\r\n\r\n// component for display the percentage price change\r\nfunction ChangePercent({ data }) {\r\n  return (\r\n    <JustifyRight>\r\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)} %\r\n      </ChangePct>\r\n    </JustifyRight>\r\n  );\r\n}\r\n\r\n// style to compact second row of coins on dashboard\r\nconst PriceTileStyled = styled(SelectableTile)`\r\n  ${props =>\r\n    props.compact &&\r\n    css`\r\n      display: grid;\r\n      ${fontSize3}\r\n      grid-gap: 5px;\r\n      grid-template-columns: repeat(3, 1fr);\r\n    `}\r\n\r\n  ${props =>\r\n    props.currentFavourite &&\r\n    css`\r\n      ${greenBoxShadow}\r\n      pointer-events: none;\r\n    `}\r\n`;\r\n\r\nfunction PriceTile({\r\n  coinSymbol,\r\n  data,\r\n  currentFavourite,\r\n  setCurrentFavourite\r\n}) {\r\n  return (\r\n    <PriceTileStyled\r\n      onClick={setCurrentFavourite}\r\n      currentFavourite={currentFavourite}\r\n    >\r\n      <CoinHeaderGridStyled>\r\n        <div> {coinSymbol} </div>\r\n        <ChangePercent data={data} />\r\n      </CoinHeaderGridStyled>\r\n      <TickerPrice>${numberFormat(data.PRICE)}</TickerPrice>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nfunction PriceTileCompact({\r\n  coinSymbol,\r\n  data,\r\n  currentFavourite,\r\n  setCurrentFavourite\r\n}) {\r\n  return (\r\n    <PriceTileStyled\r\n      onClick={setCurrentFavourite}\r\n      compact\r\n      currentFavourite={currentFavourite}\r\n    >\r\n      <JustifyLeft> {coinSymbol} </JustifyLeft>\r\n      <ChangePercent data={data} />\r\n      <JustifyRight>${numberFormat(data.PRICE)}</JustifyRight>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nexport default function({ price, index }) {\r\n  let coinSymbol = Object.keys(price)[0];\r\n  let data = price[coinSymbol]['USD'];\r\n\r\n  // we want to display the tiles differently depending what row it is on\r\n  let TileClass = index < 5 ? PriceTile : PriceTileCompact;\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ currentFavourite, setCurrentFavourite }) => (\r\n        <TileClass\r\n          coinSymbol={coinSymbol}\r\n          data={data}\r\n          currentFavourite={currentFavourite === coinSymbol}\r\n          setCurrentFavourite={() => setCurrentFavourite(coinSymbol)}\r\n        />\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport PriceTile from './PriceTile';\r\n\r\nconst PriceGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ prices }) => (\r\n        <PriceGrid>\r\n          {prices.map((price, index) => (\r\n            <PriceTile key={`priceTile-${index}`} index={index} price={price} />\r\n          ))}\r\n        </PriceGrid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tile } from '../Shared/Tile';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport CoinImage from '../Shared/CoinImage';\r\nimport styled from 'styled-components';\r\n\r\nconst SpotLightName = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ currentFavourite, coinList }) => (\r\n        <Tile>\r\n          <SpotLightName> {coinList[currentFavourite].CoinName} </SpotLightName>\r\n          <CoinImage spotlight coin={coinList[currentFavourite]} />\r\n        </Tile>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { backgroundColor2, fontSize2 } from '../Shared/Styles';\r\n\r\nexport default styled.select`\r\n  ${backgroundColor2}\r\n  ${fontSize2}\r\n    color: #1163c9;\r\n  border: 1px solid;\r\n  margin: 5px;\r\n  height: 25px;\r\n  float: right;\r\n`;\r\n","import highchartsConfig from './HighChartsConfig';\r\nimport React from 'react';\r\nimport { Tile } from '../Shared/Tile';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport ReactHighCharts from 'react-highcharts';\r\nimport HighChartsTheme from './HighChartsTheme';\r\nimport ChartSelect from './ChartSelect';\r\nReactHighCharts.Highcharts.setOptions(HighChartsTheme);\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ historical, changeChartSelect }) => (\r\n        <Tile>\r\n          <ChartSelect\r\n            defaultValue={'months'}\r\n            onChange={e => changeChartSelect(e.target.value)}\r\n          >\r\n            <option value=\"days\"> Days </option>\r\n            <option value=\"weeks\"> Weeks </option>\r\n            <option value=\"months\"> Months </option>\r\n          </ChartSelect>\r\n          {historical ? (\r\n            <ReactHighCharts config={highchartsConfig(historical)} />\r\n          ) : (\r\n            <div> Loading Historical Data </div>\r\n          )}\r\n        </Tile>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","export default {\r\n  colors: [\r\n    '#61d936',\r\n    '#552ccb',\r\n    '#1163c9',\r\n    '#04a1ee',\r\n    '#08c6e0',\r\n    '#146b9e',\r\n    '#f376c1',\r\n    '#1b2839'\r\n  ],\r\n  chart: {\r\n    backgroundColor: '#061a44',\r\n    borderColor: '#000000',\r\n    borderWidth: 0,\r\n    className: 'dark-container',\r\n    plotBackgroundColor: '#061a44',\r\n    plotBorderWidth: 0\r\n  },\r\n  title: {\r\n    style: {\r\n      color: '#C0C0C0',\r\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\r\n    }\r\n  },\r\n  subtitle: {\r\n    style: {\r\n      color: '#666666',\r\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\r\n    }\r\n  },\r\n  xAxis: {\r\n    gridLineColor: '#333333',\r\n    gridLineWidth: 0,\r\n    labels: {\r\n      style: {\r\n        color: '#A0A0A0'\r\n      }\r\n    },\r\n    lineColor: '#A0A0A0',\r\n    tickColor: '#A0A0A0',\r\n    title: {\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold',\r\n        fontSize: '12px',\r\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n      }\r\n    }\r\n  },\r\n  yAxis: {\r\n    gridLineWidth: 0,\r\n    gridLineColor: '#333333',\r\n    labels: {\r\n      style: {\r\n        color: '#A0A0A0'\r\n      }\r\n    },\r\n    lineColor: '#A0A0A0',\r\n    minorTickInterval: null,\r\n    tickColor: '#A0A0A0',\r\n    tickWidth: 1,\r\n    title: {\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold',\r\n        fontSize: '12px',\r\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n      }\r\n    }\r\n  },\r\n  tooltip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n    style: {\r\n      color: '#F0F0F0'\r\n    }\r\n  },\r\n  toolbar: {\r\n    itemStyle: {\r\n      color: 'silver'\r\n    }\r\n  },\r\n  plotOptions: {\r\n    line: {\r\n      dataLabels: {\r\n        color: '#CCC'\r\n      },\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    spline: {\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    scatter: {\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    candlestick: {\r\n      lineColor: 'white'\r\n    }\r\n  },\r\n  legend: {\r\n    itemStyle: {\r\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n      color: '#A0A0A0'\r\n    },\r\n    itemHoverStyle: {\r\n      color: '#FFF'\r\n    },\r\n    itemHiddenStyle: {\r\n      color: '#444'\r\n    }\r\n  },\r\n  credits: {\r\n    enabled: false\r\n  },\r\n  labels: {\r\n    style: {\r\n      color: '#CCC'\r\n    }\r\n  },\r\n\r\n  navigation: {\r\n    buttonOptions: {\r\n      symbolStroke: '#DDDDDD',\r\n      hoverSymbolStroke: '#FFFFFF',\r\n      theme: {\r\n        fill: {\r\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n          stops: [[0.4, '#606060'], [0.6, '#333333']]\r\n        },\r\n        stroke: '#000000'\r\n      }\r\n    }\r\n  },\r\n\r\n  // scroll charts\r\n  rangeSelector: {\r\n    buttonTheme: {\r\n      fill: {\r\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n        stops: [[0.4, '#888'], [0.6, '#555']]\r\n      },\r\n      stroke: '#000000',\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold'\r\n      },\r\n      states: {\r\n        hover: {\r\n          fill: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [[0.4, '#BBB'], [0.6, '#888']]\r\n          },\r\n          stroke: '#000000',\r\n          style: {\r\n            color: 'white'\r\n          }\r\n        },\r\n        select: {\r\n          fill: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [[0.1, '#000'], [0.3, '#333']]\r\n          },\r\n          stroke: '#000000',\r\n          style: {\r\n            color: 'yellow'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    inputStyle: {\r\n      backgroundColor: '#333',\r\n      color: 'silver'\r\n    },\r\n    labelStyle: {\r\n      color: 'silver'\r\n    }\r\n  },\r\n\r\n  navigator: {\r\n    handles: {\r\n      backgroundColor: '#666',\r\n      borderColor: '#AAA'\r\n    },\r\n    outlineColor: '#CCC',\r\n    maskFill: 'rgba(16, 16, 16, 0.5)',\r\n    series: {\r\n      color: '#7798BF',\r\n      lineColor: '#A6C7ED'\r\n    }\r\n  },\r\n\r\n  scrollbar: {\r\n    barBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [[0.4, '#888'], [0.6, '#555']]\r\n    },\r\n    barBorderColor: '#CCC',\r\n    buttonArrowColor: '#CCC',\r\n    buttonBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [[0.4, '#888'], [0.6, '#555']]\r\n    },\r\n    buttonBorderColor: '#CCC',\r\n    rifleColor: '#FFF',\r\n    trackBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [[0, '#000'], [1, '#333']]\r\n    },\r\n    trackBorderColor: '#666'\r\n  },\r\n\r\n  // special colors for some of the\r\n  legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  background2: 'rgb(35, 35, 70)',\r\n  dataLabelsColor: '#444',\r\n  textColor: '#C0C0C0',\r\n  maskColor: 'rgba(255,255,255,0.3)'\r\n};\r\n","export default function(historical) {\r\n  return {\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    yAxis: {\r\n      title: {\r\n        text: 'Price'\r\n      }\r\n    },\r\n    xAxis: { type: 'datetime' },\r\n    legend: {\r\n      layout: 'vertical',\r\n      align: 'right',\r\n      verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n      series: {\r\n        label: {\r\n          connectorAllowed: false\r\n        },\r\n        pointStart: 2010\r\n      }\r\n    },\r\n\r\n    series: historical,\r\n\r\n    responsive: {\r\n      rules: [\r\n        {\r\n          condition: {\r\n            maxWidth: 500\r\n          },\r\n          chartOptions: {\r\n            legend: {\r\n              layout: 'horizontal',\r\n              align: 'center',\r\n              verticalAlign: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Page from '../Shared/Page';\r\nimport PriceGrid from './PriceGrid';\r\nimport CoinSpotlight from './CoinSpotlight';\r\nimport styled from 'styled-components';\r\nimport PriceChart from './PriceChart';\r\n\r\nconst ChartGrid = styled.div`\r\n  display: grid;\r\n  margin-top: 20px;\r\n  grid-gap: 15px;\r\n  grid-template-columns: 1fr 3fr;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <Page name=\"dashboard\">\r\n      <PriceGrid />\r\n      <ChartGrid>\r\n        <CoinSpotlight />\r\n        <PriceChart />\r\n      </ChartGrid>\r\n    </Page>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppLayout from './AppLayout';\r\nimport AppBar from './AppBar';\r\nimport { AppProvider } from './AppProvider';\r\nimport Settings from '../Settings';\r\nimport Content from '../Shared/Content';\r\nimport Dashboard from '../Dashboard';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <AppLayout>\r\n        <AppProvider>\r\n          <AppBar />\r\n          <Content>\r\n            <Settings />\r\n            <Dashboard />\r\n          </Content>\r\n        </AppProvider>\r\n      </AppLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}