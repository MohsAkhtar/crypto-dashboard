{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/Welcome.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Shared/Content.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","cryptocompare","require","AppContext","React","createContext","MAX_FAVOURITES","AppProvider","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addCoin","key","favourites","toConsumableArray","state","length","push","setState","removeCoin","_","pull","isInFavourites","includes","componentDidMount","fetchCoins","fetchPrices","asyncToGenerator","regenerator_default","a","mark","_callee","prices","wrap","_context","prev","next","firstVisit","abrupt","sent","stop","_callee2","returnData","i","priceData","_context2","priceFull","t0","console","warn","_callee3","coinList","_context3","Data","confirmFavourites","page","localStorage","setItem","JSON","stringify","setPage","setFilteredCoins","filteredCoins","objectSpread","savedSettings","inherits","createClass","value","cryptoDashboardData","parse","getItem","react_default","createElement","Provider","children","Component","Logo","AppBar_templateObject","Bar","_templateObject2","ControlButtonElem","_templateObject3","active","css","_templateObject4","ControlButton","_ref","name","Consumer","_ref2","lower","onClick","charAt","toUpperCase","substr","AppBar","Welcome","lightBlueBackground","concat","backgroundColor2","subtleBoxShadow","ConfirmButtonStyled","ConfirmButton_templateObject","CenterDiv","ConfirmButton_templateObject2","ConfirmButton","Page","Tile","Tile_templateObject","SelectableTile","Tile_templateObject2","DeletableTile","Tile_templateObject3","DisabledTile","Tile_templateObject4","CoinHeaderGridStyled","CoinHeaderGrid_templateObject","CoinSymbol","CoinHeaderGrid_templateObject2","DeleteIcon","CoinHeaderGrid_templateObject3","CoinHeaderGrid","symbol","topSection","CoinImage","coin","style","alt","height","src","ImageUrl","CoinTile","coinKey","TileClass","clickCoinHandler","CoinName","Symbol","CoinGridStyled","CoinGrid_templateObject","getCoinsToDisplay","keys","slice","getLowerSectionCoins","CoinGrid","map","SearchGrid","Search_templateObject","SearchInput","input","Search_templateObject2","handleFilter","debounce","inputValue","coinSymbols","coinNames","sym","allStringToSearch","fuzzyResults","fuzzy","filter","result","string","pickBy","symbolKey","coinName","Search","onKeyUp","e","target","filterCoins","Settings","Welcome_Welcome","Content","JustifyRight","PriceTile_templateObject","JustifyLeft","PriceTile_templateObject2","TickerPrice","PriceTile_templateObject3","ChangePct","PriceTile_templateObject4","red","_templateObject5","numberFormat","number","ChangePercent","data","CHANGEPCT24HOUR","PriceTileStyled","_templateObject6","compact","_templateObject7","PriceTile","coinSymbol","PRICE","PriceTileCompact","_ref3","Dashboard_PriceTile","_ref4","price","index","PriceGrid","PriceGrid_templateObject","Dashboard_PriceGrid","Dashboard","App","AppLayout","AppProvider_AppProvider","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.877fa6b3.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n  padding: 40px;\r\n`;\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst cryptocompare = require('cryptocompare');\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst MAX_FAVOURITES = 10;\r\n\r\nexport class AppProvider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 'dashboard',\r\n      favourites: ['BTC', 'ETH', 'XMR', 'DOGE'],\r\n      ...this.savedSettings(),\r\n      setPage: this.setPage,\r\n      addCoin: this.addCoin,\r\n      removeCoin: this.removeCoin,\r\n      isInFavourites: this.isInFavourites,\r\n      setFilteredCoins: this.setFilteredCoins,\r\n      confirmFavourites: this.confirmFavourites\r\n    };\r\n  }\r\n\r\n  // adds coin to favourites\r\n  addCoin = key => {\r\n    let favourites = [...this.state.favourites];\r\n    if (favourites.length < MAX_FAVOURITES) {\r\n      favourites.push(key);\r\n      this.setState({ favourites });\r\n    }\r\n  };\r\n\r\n  // remove coin from favourites\r\n  removeCoin = key => {\r\n    let favourites = [...this.state.favourites];\r\n    // _.pull is lodash command to pull a value out of the array and then return new array with value removed\r\n    this.setState({ favourites: _.pull(favourites, key) });\r\n  };\r\n\r\n  // check if value is already in favourites\r\n  isInFavourites = key => _.includes(this.state.favourites, key);\r\n\r\n  // want coin api to load on mount\r\n  componentDidMount = () => {\r\n    this.fetchCoins();\r\n    this.fetchPrices();\r\n  };\r\n\r\n  // fetch prices for dashboard\r\n  fetchPrices = async () => {\r\n    // if user is visiting first time we don't have coin prices to fetch yet\r\n    if (this.state.firstVisit) {\r\n      return;\r\n    }\r\n    let prices = await this.prices();\r\n    this.setState({ prices });\r\n  };\r\n\r\n  prices = async () => {\r\n    let returnData = [];\r\n    for (let i = 0; i < this.state.favourites.length; i++) {\r\n      try {\r\n        let priceData = await cryptocompare.priceFull(\r\n          this.state.favourites[i],\r\n          'USD'\r\n        );\r\n        returnData.push(priceData);\r\n      } catch (e) {\r\n        console.warn('Fetch Price error: ', e);\r\n      }\r\n    }\r\n    return returnData;\r\n  };\r\n\r\n  // fetches coin data from crypto compare api\r\n  fetchCoins = async () => {\r\n    let coinList = (await cryptocompare.coinList()).Data;\r\n    this.setState({ coinList });\r\n  };\r\n\r\n  // confirming favourites redirects to dashboard\r\n  confirmFavourites = () => {\r\n    this.setState(\r\n      {\r\n        firstVisit: false,\r\n        page: 'dashboard'\r\n      },\r\n      () => {\r\n        this.fetchPrices();\r\n      }\r\n    );\r\n    localStorage.setItem(\r\n      'cryptoDashboard',\r\n      JSON.stringify({\r\n        favourites: this.state.favourites\r\n      })\r\n    );\r\n  };\r\n\r\n  // Check if user has used site before by looking at ls\r\n  savedSettings() {\r\n    let cryptoDashboardData = JSON.parse(\r\n      localStorage.getItem('cryptoDashboard')\r\n    );\r\n    // if we have not visited site before\r\n    if (!cryptoDashboardData) {\r\n      return { page: 'settings', firstVisit: true };\r\n    }\r\n\r\n    let { favourites } = cryptoDashboardData;\r\n    return { favourites };\r\n  }\r\n\r\n  setPage = page => this.setState({ page });\r\n\r\n  // filter coins with search bar\r\n  setFilteredCoins = filteredCoins => this.setState({ filteredCoins });\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { AppContext } from './AppProvider';\r\n\r\nconst Logo = styled.div`\r\n  font-size: 1.5em;\r\n`;\r\n\r\n// auto will replace remaining content with space\r\nconst Bar = styled.div`\r\n  display: grid;\r\n  margin-bottom: 40px;\r\n  grid-template-columns: 180px auto 100px 100px;\r\n`;\r\n\r\nconst ControlButtonElem = styled.div`\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.active &&\r\n    css`\r\n      text-shadow: 0px 0px 60px #03ff03;\r\n    `}\r\n`;\r\n\r\n// Capitalises first letter of word\r\nfunction toProperCase(lower) {\r\n  return lower.charAt(0).toUpperCase() + lower.substr(1);\r\n}\r\n\r\nfunction ControlButton({ name, active }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ page, setPage }) => (\r\n        <ControlButtonElem active={page === name} onClick={() => setPage(name)}>\r\n          {toProperCase(name)}\r\n        </ControlButtonElem>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Bar>\r\n      <Logo> Cryptos </Logo>\r\n      <div />\r\n      <ControlButton active name=\"dashboard\" />\r\n      <ControlButton name=\"settings\" />\r\n    </Bar>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\nexport default class Welcome extends Component {\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({ firstVisit }) =>\r\n          firstVisit ? (\r\n            <div>\r\n              <h1>Welcome, Please Select Your Favourite Coins to Begin. </h1>\r\n            </div>\r\n          ) : null\r\n        }\r\n      </AppContext.Consumer>\r\n    );\r\n  }\r\n}\r\n","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#061a44';\r\nexport const color2 = lightTheme ? 'white' : '#010e2c';\r\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\r\n\r\nif (lightTheme) {\r\n  document.body.style.background = '#e1eaee';\r\n  document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${\r\n  lightTheme ? '#a9b6ff' : '#121d5b'\r\n}`;\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;';\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport { fontSize1, greenBoxShadow, color3 } from '../Shared/Styles';\r\n\r\nconst ConfirmButtonStyled = styled.div`\r\n  margin: 20px;\r\n  color: ${color3}\r\n  ${fontSize1}\r\n  padding: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n      ${greenBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const CenterDiv = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ confirmFavourites }) => (\r\n        <CenterDiv>\r\n          <ConfirmButtonStyled onClick={confirmFavourites}>\r\n            Confirm Favourites\r\n          </ConfirmButtonStyled>\r\n        </CenterDiv>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\n// extract page from props, check if page is name passed in at component level. children props are nested components\r\nexport default function({ name, children }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ page }) => {\r\n        if (page !== name) {\r\n          return null;\r\n        }\r\n        return <div> {children}</div>;\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport {\r\n  subtleBoxShadow,\r\n  greenBoxShadow,\r\n  redBoxShadow,\r\n  lightBlueBackground\r\n} from './Styles';\r\n\r\nexport const Tile = styled.div`\r\n  ${subtleBoxShadow}\r\n  ${lightBlueBackground}\r\n    padding: 10px;\r\n`;\r\n\r\nexport const SelectableTile = styled(Tile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${greenBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const DeletableTile = styled(SelectableTile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${redBoxShadow}\r\n  }\r\n`;\r\n\r\nexport const DisabledTile = styled(Tile)`\r\n  pointer-events: none;\r\n  opacity: 0.4;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DeletableTile } from '../Shared/Tile';\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nexport const CoinSymbol = styled.div`\r\n  justify-self: right;\r\n`;\r\n\r\n// adding new properties using styled-components when hovering on deletable tiles\r\nconst DeleteIcon = styled.div`\r\n  justify-self: right;\r\n  display: none;\r\n  ${DeletableTile}:hover & {\r\n    display: block;\r\n    color: red;\r\n  }\r\n`;\r\n\r\nexport default function({ name, symbol, topSection }) {\r\n  return (\r\n    <CoinHeaderGridStyled>\r\n      <div> {name} </div>\r\n      {topSection ? (\r\n        <DeleteIcon> X </DeleteIcon>\r\n      ) : (\r\n        <CoinSymbol> {symbol} </CoinSymbol>\r\n      )}\r\n    </CoinHeaderGridStyled>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// if no style passed in it defaults to height: '50px';\r\nexport default function({ coin, style }) {\r\n  return (\r\n    <img\r\n      alt={coin.CoinSymbol}\r\n      style={style || { height: '50px' }}\r\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport { SelectableTile, DeletableTile, DisabledTile } from '../Shared/Tile';\r\nimport CoinHeaderGrid from './CoinHeaderGrid';\r\nimport CoinImage from '../Shared/CoinImage';\r\n\r\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\r\n  return topSection\r\n    ? () => {\r\n        removeCoin(coinKey);\r\n      }\r\n    : () => {\r\n        addCoin(coinKey);\r\n      };\r\n}\r\n\r\nexport default function({ coinKey, topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, addCoin, removeCoin, isInFavourites }) => {\r\n        // returning coin object of coins\r\n        let coin = coinList[coinKey];\r\n\r\n        let TileClass = SelectableTile;\r\n        if (topSection) {\r\n          TileClass = DeletableTile;\r\n        } else if (isInFavourites(coinKey)) {\r\n          TileClass = DisabledTile;\r\n        }\r\n\r\n        return (\r\n          <TileClass\r\n            onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\r\n          >\r\n            <CoinHeaderGrid\r\n              topSection={topSection}\r\n              name={coin.CoinName}\r\n              symbol={coin.Symbol}\r\n            />\r\n            <CoinImage coin={coin} />\r\n          </TileClass>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport CoinTile from './CoinTile';\r\n\r\nexport const CoinGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nfunction getLowerSectionCoins(coinList, filteredCoins) {\r\n  return (\r\n    (filteredCoins && Object.keys(filteredCoins)) ||\r\n    Object.keys(coinList).slice(0, 100)\r\n  );\r\n}\r\n\r\nfunction getCoinsToDisplay(coinList, topSection, favourites, filteredCoins) {\r\n  // don't want to display all 1000 images\r\n  return topSection\r\n    ? favourites\r\n    : getLowerSectionCoins(coinList, filteredCoins);\r\n}\r\n\r\nexport default function({ topSection }) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, favourites, filteredCoins }) => (\r\n        <CoinGridStyled>\r\n          {getCoinsToDisplay(\r\n            coinList,\r\n            topSection,\r\n            favourites,\r\n            filteredCoins\r\n          ).map(coinKey => (\r\n            <CoinTile topSection={topSection} coinKey={coinKey} key={coinKey} />\r\n          ))}\r\n        </CoinGridStyled>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { backgroundColor2, fontSize2 } from '../Shared/Styles';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport _ from 'lodash';\r\nimport fuzzy from 'fuzzy';\r\n\r\nconst SearchGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  ${backgroundColor2}\r\n  ${fontSize2}\r\n  color: #1163c9;\r\n  border: 1px solid;\r\n  height: 25px;\r\n  place-self: center left;\r\n`;\r\n\r\n// debounce is a lodash function that stops too many events firing off at once, telling it to wait 500ms before applying filter\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\r\n  // Get all coin symbols\r\n  let coinSymbols = Object.keys(coinList);\r\n  // Get all the coin names, map symbol to name\r\n  let coinNames = coinSymbols.map(sym => coinList[sym].CoinName);\r\n  // Get all the coins and concat the name\r\n  let allStringToSearch = coinSymbols.concat(coinNames);\r\n  // fuzzy is used to do fuzzy search. It returns an object so needs to be converted to string\r\n  let fuzzyResults = fuzzy\r\n    .filter(inputValue, allStringToSearch, {})\r\n    .map(result => result.string);\r\n  // _.pickBy picks from the object a list of keys based on a callback function\r\n  let filteredCoins = _.pickBy(coinList, (result, symbolKey) => {\r\n    let coinName = result.CoinName;\r\n    return (\r\n      _.includes(fuzzyResults, symbolKey) || _.includes(fuzzyResults, coinName)\r\n    );\r\n  });\r\n  // set filtered coins to what we have filtered from above\r\n  setFilteredCoins(filteredCoins);\r\n}, 500);\r\n\r\nfunction filterCoins(e, setFilteredCoins, coinList) {\r\n  let inputValue = e.target.value;\r\n  // to reset list back to null if the search is emptied\r\n  if (!inputValue) {\r\n    setFilteredCoins(null);\r\n    return;\r\n  }\r\n  handleFilter(inputValue, coinList, setFilteredCoins);\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ setFilteredCoins, coinList }) => (\r\n        <SearchGrid>\r\n          <h2>Search All Coins</h2>\r\n          <SearchInput\r\n            onKeyUp={e => filterCoins(e, setFilteredCoins, coinList)}\r\n          />\r\n        </SearchGrid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Welcome from './Welcome';\r\nimport ConfirmButton from './ConfirmButton';\r\nimport Page from '../Shared/Page';\r\nimport CoinGrid from './CoinGrid';\r\nimport Search from './Search';\r\n\r\nexport default function() {\r\n  return (\r\n    <Page name=\"settings\">\r\n      <Welcome />\r\n      <CoinGrid topSection />\r\n      <ConfirmButton />\r\n      <Search />\r\n      <CoinGrid />\r\n    </Page>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\n\r\n// Making sure page isn't loaded before api promise has resolved\r\nexport default function(props) {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ coinList, prices, firstVisit }) => {\r\n        if (!coinList) {\r\n          return <div> Loading Coins </div>;\r\n        }\r\n        if (!firstVisit && !prices) {\r\n          return <div> Loading Prices </div>;\r\n        }\r\n        return <div> {props.children} </div>;\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { SelectableTile } from '../Shared/Tile';\r\nimport { fontSize3, fontSizeBig } from '../Shared/Styles';\r\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid';\r\n\r\n// justify content to right\r\nconst JustifyRight = styled.div`\r\n  justify-self: right;\r\n`;\r\n\r\n// justify content to left\r\nconst JustifyLeft = styled.div`\r\n  justify-self: left;\r\n`;\r\n\r\n// displays the price of the coin\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig};\r\n`;\r\n\r\n// percent is displayed red if price change is negative, green otherwise\r\nconst ChangePct = styled.div`\r\n  color: green;\r\n  ${props =>\r\n    props.red &&\r\n    css`\r\n      color: red;\r\n    `}\r\n`;\r\n\r\n// returns number with 7 significant figs.\r\nconst numberFormat = number => {\r\n  return +(number + '').slice(0, 7);\r\n};\r\n\r\n// component for display the percentage price change\r\nfunction ChangePercent({ data }) {\r\n  return (\r\n    <JustifyRight>\r\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)}\r\n      </ChangePct>\r\n    </JustifyRight>\r\n  );\r\n}\r\n\r\n// style to compact second row of coins on dashboard\r\nconst PriceTileStyled = styled(SelectableTile)`\r\n  ${props =>\r\n    props.compact &&\r\n    css`\r\n      display: grid;\r\n      ${fontSize3}\r\n      grid-gap: 5px;\r\n      grid-template-columns: repeat(3, 1fr);\r\n    `}\r\n`;\r\n\r\nfunction PriceTile({ coinSymbol, data }) {\r\n  return (\r\n    <PriceTileStyled>\r\n      <CoinHeaderGridStyled>\r\n        <div> {coinSymbol} </div>\r\n        <ChangePercent data={data} />\r\n      </CoinHeaderGridStyled>\r\n      <TickerPrice>${numberFormat(data.PRICE)}</TickerPrice>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nfunction PriceTileCompact({ coinSymbol, data }) {\r\n  return (\r\n    <PriceTileStyled compact>\r\n      <JustifyLeft> {coinSymbol} </JustifyLeft>\r\n      <ChangePercent data={data} />\r\n      <JustifyRight>${numberFormat(data.PRICE)}</JustifyRight>\r\n    </PriceTileStyled>\r\n  );\r\n}\r\n\r\nexport default function({ price, index }) {\r\n  let coinSymbol = Object.keys(price)[0];\r\n  let data = price[coinSymbol]['USD'];\r\n\r\n  // we want to display the tiles differently depending what row it is on\r\n  let TileClass = index < 5 ? PriceTile : PriceTileCompact;\r\n\r\n  return <TileClass coinSymbol={coinSymbol} data={data} />;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport PriceTile from './PriceTile';\r\n\r\nconst PriceGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport default function() {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ prices }) => (\r\n        <PriceGrid>\r\n          {prices.map((price, index) => (\r\n            <PriceTile index={index} price={price} />\r\n          ))}\r\n        </PriceGrid>\r\n      )}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Page from '../Shared/Page';\r\nimport PriceGrid from './PriceGrid';\r\n\r\nexport default function() {\r\n  return (\r\n    <Page name=\"dashboard\">\r\n      <PriceGrid />\r\n    </Page>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppLayout from './AppLayout';\r\nimport AppBar from './AppBar';\r\nimport { AppProvider } from './AppProvider';\r\nimport Settings from '../Settings';\r\nimport Content from '../Shared/Content';\r\nimport Dashboard from '../Dashboard';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <AppLayout>\r\n        <AppProvider>\r\n          <AppBar />\r\n          <Content>\r\n            <Settings />\r\n            <Dashboard />\r\n          </Content>\r\n        </AppProvider>\r\n      </AppLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}